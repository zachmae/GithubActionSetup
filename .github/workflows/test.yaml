## NAME OF THE WORKFLOW
name: workflow-name

## CONDITIONS FOR THE WORKFLOW TO RUN:
on:
  push:
    branches-ignore:
      - 'ga-ignore*'
  pull_request:
    branches-ignore:
      - 'ga-ignore*'

  workflow_dispatch:

## DEFAULTS FOR THE WORKFLOW:
defaults:
  run:
    shell: bash

jobs:
  linux_testing_setup:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    timeout-minutes: 5
    steps:
      ## GET THE REPOSITORY
      - name: checkout
        uses: actions/checkout@v3

      ## SETUP THE REPOSITORY
      - name: informations
        run: |
          echo Welcome to Zachmae workflow \
          echo Repository:\n\t'$GITHUB_REPOSITORY' \
          echo Branch:\n\t${GITHUB_REF##*/} \
          echo Size: \
          du -skh --exclude=.git --exclude=.github --exclude=.gitignore \
      - name: fclean_repo
        run: make fclean

      ## BUILD THE PROJECT
      - name: build_repo
        run: make
      - name: clean_repo
        run: make clean

      ## TEST THE PROJECT
        # functionnal
      - name: functional_tests
        run: ./functional-test.sh > result_bash_tests ; cat result_bash_tests
      - name: Artifact functional
        uses: actions/upload-artifact@v3
        with:
          name: result_bash_tests
          path: ./result_bash_tests

        # unitary
      - name: unit test
        run: make tests_run > result_unit_tests ; cat result_unit_tests
      - name: Artifact unit
        uses: actions/upload-artifact@v3
        with:
          name: result_unit_tests
          path: ./result_unit_tests

    ## MIRRORRING THE REPOSITORY
  mirrorring:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [ linux_testing_setup ]
    if: |
      always() &&
      !contains(needs.*.result, 'failure') &&
      ${GITHUB_REF##*/} == 'master'

    env:
      Username: zachmae
      MirrorDest: MirrorTest
    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: pixta-dev/repository-mirroring-action@v1
      with:
        target_repo_url:
          git@github.com:${{env.Username}}/${{env.MirrorDest}}.git
        ssh_private_key:
          ${{ secrets.SSH_PRIVATE_KEY }}
